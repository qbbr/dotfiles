#!/usr/bin/env bash

# ./backlight-brightness-control
#
# use \w sudo or add udev rule `/etc/udev/rules.d/backlight.rules`:
#   ACTION=="add", SUBSYSTEM=="backlight", KERNEL=="acpi_video0", RUN+="/bin/chgrp video /sys/class/backlight/%k/brightness"
#   ACTION=="add", SUBSYSTEM=="backlight", KERNEL=="acpi_video0", RUN+="/bin/chmod g+w /sys/class/backlight/%k/brightness"
# where `acpi_video0` its u vendor && add u user 2 video group:
#   usermod -aG video $USER
#
# see --help for usage
#
# example:
#   ./script --vendor <vendor> --get
#   ./script -v <vendor> --set 2
#   ./script --set 5
#   ./script -i
#   ./script -d
#
# author: @qbbr

# for --dzen only
readonly DZEN_FONT="terminus-12"
readonly DZEN_BG="#073642"
readonly DZEN_FG="#EEE8D5"
readonly DZEN_WIDTH=272

usage() {
	echo "Usage: ${0##*/} [option] [argument]"
	echo
	echo "Options:"
	echo "	-v, --vendor    - set vendor, optional [default=acpi_video0]"
	echo "	-g, --get       - get current brightness"
	echo "	-m, --get-max   - get max value"
	echo "	-s, --set       - set brightness"
	echo "	-t, --set-max   - set max value"
	echo "	-b, --set-min   - set min value"
	echo "	-i, --increment - increment brightness value (+1)"
	echo "	-d, --decrement - decrement brightness value (-1)"
	echo "	--dzen          - show dbar in dzen2"
	echo "	-h, --help      - display this help and exit"
	exit 0
}

POSITIONAL=()

while [[ $# -gt 0 ]]; do
	key="$1"

	case ${key} in
		-v|--vendor)
			VENDOR="$2"
			shift # past argument
			shift # past value
		;;
		-g|--get)
			GET_VALUE=1
			shift # past argument
			;;
		-m|--get-max)
			GET_MAX_VALUE=1
			shift
			;;
		-s|--set)
			SET_VALUE="$2"
			shift
			shift
			;;
		-t|--set-max)
			SET_MAX_VALUE=1
			shift
			;;
		-b|--set-min)
			SET_MIN_VALUE=1
			shift
			;;
		-i|--increment)
			INCREMENT=1
			shift
			;;
		-d|--decrement)
			DECREMENT=1
			shift
			;;
		--dzen)
			SHOW_DZEN2=1
			shift
			;;
		-h|--help)
			usage
			;;
		*) # unknown option
			POSITIONAL+=("$1") # save it in an array for later
			shift
			;;
	esac
done

set -- "${POSITIONAL[@]}" # restore positional parameter

VENDOR="${VENDOR:-acpi_video0}" # set default vendor if n
SYSFS_PATH="/sys/class/backlight/${VENDOR}"

fail() {
	echo "$1"
	exit 1
}

if [[ ! -d "${SYSFS_PATH}" ]]; then
	fail "Vendor '${VENDOR}' not found"
fi

success() {
	local value=$1

	if [[ -z "${SHOW_DZEN2}" ]]; then
		echo ${value}
		exit 0
	fi

	local PIPE_FILE="/tmp/pipe-${0##*/}"
	# calculate center
	local SCREEN_SIZE=$(xdpyinfo | grep dimensions | cut -d ' ' -f 7)
	local SCREEN_WIDTH=$(echo ${SCREEN_SIZE} | cut -d 'x' -f 1)
	local SCREEN_HEIGHT=$(echo ${SCREEN_SIZE} | cut -d 'x' -f 2)
	((XPOS = SCREEN_WIDTH / 2 - DZEN_WIDTH / 2))
	((YPOS = SCREEN_HEIGHT / 2))

	# prevents multiple dzen instance
	if [[ ! -e "${PIPE_FILE}" ]]; then
		mkfifo "${PIPE_FILE}"
		(dzen2 -l 1 -x "${XPOS}" -y "${YPOS}" -w "${DZEN_WIDTH}" -fn "${DZEN_FONT}" -bg "${DZEN_BG}" -fg "${DZEN_FG}" -e 'onstart=uncollapse' < "${PIPE_FILE}"; rm -f "${PIPE_FILE}") &
	fi

	(echo "Backlight (${VENDOR})" ; echo "${value} $(get_max_value)" | dbar ; sleep 1) > "${PIPE_FILE}"

	exit 0
}

get_value() {
	cat "${SYSFS_PATH}/brightness"
}

get_max_value() {
	cat "${SYSFS_PATH}/max_brightness"
}

set_value() {
	local new_value=${1}
	local min_value=0
	local max_value=$(get_max_value)

	if [[ "${new_value}" -lt "${min_value}"  ]] || [[ "${new_value}" -gt "${max_value}" ]]; then
		echo "Set value '${new_value}' is not valid (min: ${min_value}, max: ${max_value})"
		exit 1
	else
		echo "${new_value}" > "${SYSFS_PATH}/brightness"
	fi
}

if [[ -n "${GET_VALUE}" ]]; then
	success $(get_value)
elif [[ -n "${GET_MAX_VALUE}" ]]; then
	success $(get_max_value)
elif [[ -n "${SET_VALUE}" ]]; then
	set_value ${SET_VALUE}
	success ${SET_VALUE}
elif [[ -n "${SET_MAX_VALUE}" ]]; then
	max_value=$(get_max_value)
	set_value ${max_value}
	success ${max_value}
elif [[ -n "${SET_MIN_VALUE}" ]]; then
	min_value=0
	set_value ${min_value}
	success ${min_value}
elif [[ -n "${INCREMENT}" ]]; then
	value=$(get_value)
	set_value $((++value))
	success ${value}
elif [[ -n "${DECREMENT}" ]]; then
	value=$(get_value)
	set_value $((--value))
	success ${value}
else
	fail "nothing to do, see --help"
fi
