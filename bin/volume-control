#!/usr/bin/env bash

# depends: dzen2, dbar

CARD="1"
SCONTROL="Master"
SCONTROL_HEADPHONE="Headphone"
DZEN_FONT="terminus-12"
DZEN_BG="#B58900"
DZEN_FG="#FDF6E3"
DZEN_WIDTH=272
PIPE_FILE="/tmp/volumecontrolpipe"
# calculate center
SCREEN_SIZE=$(xdpyinfo | grep dimensions | cut -d ' ' -f 7)
SCREEN_WIDTH=$(echo ${SCREEN_SIZE} | cut -d 'x' -f 1)
SCREEN_HEIGHT=$(echo ${SCREEN_SIZE} | cut -d 'x' -f 2)
let "XPOS = SCREEN_WIDTH / 2 - DZEN_WIDTH / 2"
let "YPOS = SCREEN_HEIGHT / 2"

err() {
	echo "$1"
	exit 1
}

usage() {
	echo "usage: ${0} [option] [argument]"
	echo
	echo "Options:"
	echo "	-i, --increase - increase volume by 'argument'"
	echo "	-d, --decrease - decrease volume by 'argument'"
	echo "	-t, --toggle   - toggle mute on / off"
	echo "	-h, --help     - display this help"
	exit 0
}

case "${1}" in
	'-i'|'--increase')
		[[ -z "${2}" ]] && err "No argument specified for increase"
		CMD="${2}%+"
		;;
	'-d'|'--decrease')
		[[ -z "${2}" ]] && err "No argument specified for decrease"
		CMD="${2}%-"
		;;
	'-t'|'--toggle')
		CMD="toggle"
		;;
	''|'-h'|'--help')
		usage
		;;
	*)
		err "Unrecognized option '${1}', see '--help'"
		;;
esac

# check headphone
[[ ! -z "$(amixer -c ${CARD} get ${SCONTROL_HEADPHONE} | grep '\[on\]')" && "${CMD}" != "toggle" ]] && SCONTROL="${SCONTROL_HEADPHONE}"

OUTPUT="$(amixer -c ${CARD} set ${SCONTROL} ${CMD} | tail -n 1)"
MUTE="$(echo ${OUTPUT} | cut -d '[' -f 4)"

if [[ "$MUTE" = "off]" ]]; then
	VOL="0"
else
	VOL="$(echo ${OUTPUT} | cut -d '[' -f 2 | tr -d '[%]]')"
fi

# prevents multiple dzen instance
if [[ ! -e "${PIPE_FILE}" ]]; then
	mkfifo "${PIPE_FILE}"
	(dzen2 -l 1 -x "${XPOS}" -y "${YPOS}" -w "${DZEN_WIDTH}" -fn "${DZEN_FONT}" -bg "${DZEN_BG}" -fg "${DZEN_FG}" -e 'onstart=uncollapse' < "${PIPE_FILE}"; rm -f "${PIPE_FILE}") &
fi

(echo "Volume (${SCONTROL})" ; echo "${VOL}" | dbar ; sleep 1) > "${PIPE_FILE}"
